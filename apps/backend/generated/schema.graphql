### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type List {
  _id: String!
  author: User!
  comments: [ListComment!]
  coverImageURL: String
  createdAt: DateTime
  description: String
  items: [ListItem]!
  likeCount: Int!
  likes: [ListLike]!
  state: ListState
  title: String!
  type: ListType!
  updatedAt: DateTime
}

type ListComment {
  _id: String!
  author: User!
  createdAt: DateTime
  text: String!
  updatedAt: DateTime
}

input ListInput {
  coverImageURL: String
  description: String
  items: [ListItemInput!]!
  state: ListState
  title: String!
  type: ListType
}

type ListItem {
  _id: String!
  imageURL: String
  parent: String
  text: String!
}

input ListItemInput {
  imageURL: String
  parent: String
  text: String!
}

type ListLike {
  _id: String
  list: String
  user: String
}

enum ListState {
  draft
  published
}

enum ListType {
  bulleted
  numbered
}

type LoginObject {
  authToken: String
  inviteValid: Boolean
  user: User
}

type Mutation {
  addCommentToList(listId: String!, text: String!): List
  createList(list: ListInput!): List
  deleteList(id: String!): Boolean
  followUser(userId: String!): User
  likeList(listId: String!): ListLike
  removeCommentFromList(commentId: String!, listId: String!): List
  unfollowUser(userId: String!): User
  unlikeList(listId: String!): Boolean
  updateList(id: String!, list: ListInput!): List
  updateUser(id: String!, user: UpdateUserInput!): User
}

type Ok {
  message: String
  ok: Boolean
}

type Query {
  list(id: String!): List
  listFeed(cursor: Int! = 0, pageSize: Int! = 20): [List]
  listLikeCount(listId: String!): Int
  listLikes(listId: String!): [ListLike]
  lists(cursor: Int, pageSize: Int, state: ListState): [List]

  """
  Logs in the user based on the supplied number and verification code.  If the user doesn't exist, a new user will be created
  """
  loginUser(invitedBy: String, phone: String!, verificationCode: String!): LoginObject
  sendSMSVerificationToken(invitedBy: String, phone: String!): Ok
  uploadListCoverURL: SignedURL
  uploadUserProfileImageURL: SignedURL
  user(authToken: String, id: String): User
  userLikes(userId: String): [ListLike]
  userLists(userId: String): [List]
  verifySMSVerificationToken(code: String!, phone: String!): Ok
}

type SignedURL {
  key: String!
  url: String!
}

"""
A time string at UTC, such as 10:15:30Z, compliant with the `full-time` format outlined in section 5.6 of the RFC 3339profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Time

input UpdateUserInput {
  about: String
  email: String
  imageURL: String
  registered: Boolean
  username: String
}

type User {
  _id: String!
  about: String
  createdAt: DateTime
  email: String
  followerCount: Int
  followers: [UserFollower]
  imageURL: String
  likeCount: Int
  phone: String
  registered: Boolean
  updatedAt: DateTime
  username: String
}

type UserFollower {
  _id: String
  follower: User
  user: String
}

input UserInput {
  _id: String
  phone: String
  registered: Boolean
  username: String
}